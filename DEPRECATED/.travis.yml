################################################################################
# Travis CI configuration
# Docs: https://docs.travis-ci.com/
# About Stages: https://docs.travis-ci.com/user/build-stages/
sudo: false
dist: trusty

addons:
  firefox: 'latest'
  apt:
    sources:
      - google-chrome
    packages:
      - google-chrome-stable

# https://docs.travis-ci.com/user/notifications/
notifications:
  email: false

# https://docs.travis-ci.com/user/caching/
cache:
  directories:
    - node_modules
  timeout: 180

################################################################################
# Templates
templates:
  - &tmpl-common-setup
    # You can choose Node.js and io.js versions to run your tests
    # by adding them to the node_js section of your .travis.yml:
    # docs: https://docs.travis-ci.com/user/languages/javascript-with-nodejs#Choosing-Node-versions-to-test-against
    language: node_js
    node_js:
      - node
    install:
      - npm install

# defaults
before_install: skip
install: skip
before_script: skip
script: skip
after_success: skip
after_failure: skip
after_script: skip

################################################################################
# stages
stages:
  # lint and test
  - name: verify
    # if: (type = pull_request) AND (branch = master)
    if: type IN (push, pull_request) AND (branch = master) AND (NOT tag IS present)

  # test
  - name: test
    # if: (type = pull_request) AND (branch = master)
    if: type IN (push, pull_request) AND (branch = master) AND (NOT tag IS present)

  # build
  - name: build
    # if: (type = pull_request) AND (branch = master)
    if: type IN (push, pull_request) AND (branch = master) AND (NOT tag IS present)

  # deploy digaverse.github.io (only on tags on upstream)
  - name: deploy
    if: (repo = digaverse/aframe-resonance-audio-component) AND (NOT type = pull_request) AND (tag IS present)

################################################################################
# jobs
jobs:
  include:
    # verify
    - stage: verify
      env: JOB=lint
      language: node_js
      node_js:
        - node
      install: npm install
      script: npm run lint

    - stage: test
      <<: *tmpl-common-setup
      env: JOB=firefox
      before_script:
        # Chrome.
        - export DISPLAY=:99.0
        - sh -e /etc/init.d/xvfb start
      script: npm run test:firefox -- --single-run

    - <<: *tmpl-common-setup
      env: JOB=chrome
      before_script:
        # Chrome.
        - export CHROME_BIN=/usr/bin/google-chrome
        - export DISPLAY=:99.0
        - sh -e /etc/init.d/xvfb start
      script: npm run test:chrome -- --single-run

    - stage: build
      <<: *tmpl-common-setup
      env: JOB=build
      script: npm run build

    - stage: deploy
      install: skip
      before_script: echo "before_script"
      script: echo "deploy to gh pages"
      after_script: echo "after_script"
